name: Nightly Build

on:
  workflow_dispatch: # To run the workflow manually if needed
  schedule:
    - cron: '0 0 * * *' # once a day

jobs:
  clientEvaluateChanges:
    name: Evaluate changes for run or skipping client nightly build
    runs-on: ubuntu-latest
    outputs:
      SHOULD_BUILD: ${{ steps.check.outputs.shouldBuild }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Check
        id: check
        run: |
          if [[ $(git rev-list --after="24 hours" master client/) ]]; then
            echo shouldBuild=true >> $GITHUB_OUTPUT
          else
            echo shouldBuild=false >> $GITHUB_OUTPUT
          fi

  clientBuild:
    name: Generate client Nightly Build
    runs-on: ubuntu-latest
    needs: evaluateChanges
    if: ${{ needs.evaluateChanges.outputs.SHOULD_BUILD == 'true' }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    # openssl base64 < keystore | tr -d '\n' | tee keystore.base64.txt
    - name: Decode Keystore
      env:
        ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
        KEYSTORE_PASSWORD: ${{ secrets.ANDROID_NIGHTLY_KEYSTORE_PASSWORD }}
        KEYSTORE_ALIAS: ${{ secrets.ANDROID_NIGHTLY_KEYSTORE_ALIAS }}
      run: |
        cd client/digital_lock/android
        echo $ENCODED_STRING > keystore-b64.txt
        base64 -d keystore-b64.txt > keystore.jks
        echo "storeFile=$(pwd)/keystore.jks" > key.properties
        echo "storePassword=$KEYSTORE_PASSWORD" >> key.properties
        echo "keyPassword=$KEYSTORE_PASSWORD" >> key.properties
        echo "keyAlias=$KEYSTORE_ALIAS" >> key.properties

    - name: Get Deps
      run: |
        cd client/digital_lock
        flutter pub get

    - name: Build
      run: |
        cd client/digital_lock
        flutter build apk --release -v

    - name: Send apk to telegram
      run: |
        cd client/digital_lock
        apk_path=$(find . -type f -iname *.apk)
        curl https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument \
          -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -F message_thread_id=56 \
          -F "caption=Size: $(ls -l --block-size=K "$apk_path" | awk '{ print $5 }')" \
          -F parse_mode=HTML \
          -F document=@"$apk_path"

