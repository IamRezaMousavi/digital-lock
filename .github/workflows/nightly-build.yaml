name: Nightly Build

on:
  workflow_dispatch: # To run the workflow manually if needed
  schedule:
    - cron: '0 0 * * *' # once a day

jobs:
  evaluateChanges:
    name: Evaluate changes for run or skipping nightly build
    runs-on: ubuntu-latest
    outputs:
      SHOULD_BUILD: ${{ steps.check.outputs.shouldBuild }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Check
        id: check
        run: |
          if [[ $(git rev-list --after="24 hours" master client/) ]]; then
            echo shouldBuild=true >> $GITHUB_OUTPUT
          else
            echo shouldBuild=false >> $GITHUB_OUTPUT
          fi

  build-arm:
    runs-on: ubuntu-latest
    container: archlinux:latest
    needs: evaluateChanges
    if: ${{ needs.evaluateChanges.outputs.SHOULD_BUILD == 'true' }}

    steps:
    - name: Install Deps
      run: |
        pacman -Syu \
        arm-none-eabi-gcc arm-none-eabi-newlib arm-none-eabi-binutils \
        make \
        git --noconfirm

    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Check Version
      run: arm-none-eabi-gcc --version

    - name: Build
      run: |
        cd stm32code/digital-lock
        make GIT_SUBMODULES=true

    - uses: actions/upload-artifact@v4
      with:
        name: digital-lock.hex
        path: stm32code/digital-lock/build/*.hex

  build-flutter:
    runs-on: ubuntu-latest
    needs: evaluateChanges
    if: ${{ needs.evaluateChanges.outputs.SHOULD_BUILD == 'true' }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    # openssl base64 < keystore | tr -d '\n' | tee keystore.base64.txt
    - name: Decode Keystore
      env:
        ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
        KEYSTORE_PASSWORD: ${{ secrets.ANDROID_NIGHTLY_KEYSTORE_PASSWORD }}
        KEYSTORE_ALIAS: ${{ secrets.ANDROID_NIGHTLY_KEYSTORE_ALIAS }}
      run: |
        cd client/digital_lock/android
        echo $ENCODED_STRING > keystore-b64.txt
        base64 -d keystore-b64.txt > keystore.jks
        echo "storeFile=$(pwd)/keystore.jks" > key.properties
        echo "storePassword=$KEYSTORE_PASSWORD" >> key.properties
        echo "keyPassword=$KEYSTORE_PASSWORD" >> key.properties
        echo "keyAlias=$KEYSTORE_ALIAS" >> key.properties

    - name: Check Version
      run: flutter doctor

    - name: Get Deps
      run: |
        cd client/digital_lock
        flutter pub get

    - name: Lint
      run: |
        cd client/digital_lock
        flutter analyze

    - name: Build
      run: |
        cd client/digital_lock
        flutter build apk --release -v

    - uses: actions/upload-artifact@v4
      with:
        name: digital-lock.apk
        path: client/digital_lock/build/app/outputs/flutter-apk/*.apk
